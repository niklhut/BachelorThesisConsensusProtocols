// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: client.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to store or update a key-value pair
type PutRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Key   string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Optional: absence implies a delete
	Value         *string `protobuf:"bytes,2,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutRequest) Reset() {
	*x = PutRequest{}
	mi := &file_client_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRequest) ProtoMessage() {}

func (x *PutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRequest.ProtoReflect.Descriptor instead.
func (*PutRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{0}
}

func (x *PutRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PutRequest) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

// Response for a Put request
type PutResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the operation succeeded
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Optional hint of current leader if request failed
	LeaderHint    *Peer `protobuf:"bytes,2,opt,name=leader_hint,json=leaderHint,proto3,oneof" json:"leader_hint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutResponse) Reset() {
	*x = PutResponse{}
	mi := &file_client_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutResponse) ProtoMessage() {}

func (x *PutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutResponse.ProtoReflect.Descriptor instead.
func (*PutResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{1}
}

func (x *PutResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PutResponse) GetLeaderHint() *Peer {
	if x != nil {
		return x.LeaderHint
	}
	return nil
}

// Request to retrieve a value by key
type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_client_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{2}
}

func (x *GetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// Response for a Get request
type GetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Value associated with the key, null if not found
	Value *string `protobuf:"bytes,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	// Optional leader hint if this node is not the leader
	LeaderHint    *Peer `protobuf:"bytes,2,opt,name=leader_hint,json=leaderHint,proto3,oneof" json:"leader_hint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_client_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{3}
}

func (x *GetResponse) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *GetResponse) GetLeaderHint() *Peer {
	if x != nil {
		return x.LeaderHint
	}
	return nil
}

// Response containing detailed server state
type ServerStateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the server
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The state of the server
	State         ServerState `protobuf:"varint,2,opt,name=state,proto3,enum=raft.ServerState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerStateResponse) Reset() {
	*x = ServerStateResponse{}
	mi := &file_client_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStateResponse) ProtoMessage() {}

func (x *ServerStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStateResponse.ProtoReflect.Descriptor instead.
func (*ServerStateResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{4}
}

func (x *ServerStateResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ServerStateResponse) GetState() ServerState {
	if x != nil {
		return x.State
	}
	return ServerState_FOLLOWER
}

// Response containing the term of the server
type ServerTermResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the server
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The term of the server
	Term          uint64 `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerTermResponse) Reset() {
	*x = ServerTermResponse{}
	mi := &file_client_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerTermResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerTermResponse) ProtoMessage() {}

func (x *ServerTermResponse) ProtoReflect() protoreflect.Message {
	mi := &file_client_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerTermResponse.ProtoReflect.Descriptor instead.
func (*ServerTermResponse) Descriptor() ([]byte, []int) {
	return file_client_proto_rawDescGZIP(), []int{5}
}

func (x *ServerTermResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ServerTermResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

var File_client_proto protoreflect.FileDescriptor

const file_client_proto_rawDesc = "" +
	"\n" +
	"\fclient.proto\x12\x04raft\x1a\x1bgoogle/protobuf/empty.proto\x1a\vtypes.proto\"C\n" +
	"\n" +
	"PutRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x19\n" +
	"\x05value\x18\x02 \x01(\tH\x00R\x05value\x88\x01\x01B\b\n" +
	"\x06_value\"i\n" +
	"\vPutResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x120\n" +
	"\vleader_hint\x18\x02 \x01(\v2\n" +
	".raft.PeerH\x00R\n" +
	"leaderHint\x88\x01\x01B\x0e\n" +
	"\f_leader_hint\"\x1e\n" +
	"\n" +
	"GetRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\"t\n" +
	"\vGetResponse\x12\x19\n" +
	"\x05value\x18\x01 \x01(\tH\x00R\x05value\x88\x01\x01\x120\n" +
	"\vleader_hint\x18\x02 \x01(\v2\n" +
	".raft.PeerH\x01R\n" +
	"leaderHint\x88\x01\x01B\b\n" +
	"\x06_valueB\x0e\n" +
	"\f_leader_hint\"N\n" +
	"\x13ServerStateResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12'\n" +
	"\x05state\x18\x02 \x01(\x0e2\x11.raft.ServerStateR\x05state\"8\n" +
	"\x12ServerTermResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x04R\x04term2\xa1\x02\n" +
	"\n" +
	"RaftClient\x12*\n" +
	"\x03Put\x12\x10.raft.PutRequest\x1a\x11.raft.PutResponse\x12*\n" +
	"\x03Get\x12\x10.raft.GetRequest\x1a\x11.raft.GetResponse\x12/\n" +
	"\bGetDebug\x12\x10.raft.GetRequest\x1a\x11.raft.GetResponse\x12E\n" +
	"\x0eGetServerState\x12\x16.google.protobuf.Empty\x1a\x19.raft.ServerStateResponse\"\x00\x12C\n" +
	"\rGetServerTerm\x12\x16.google.protobuf.Empty\x1a\x18.raft.ServerTermResponse\"\x00B:Z8github.com/niklhut/raft_go/internal/transport/grpc/protob\x06proto3"

var (
	file_client_proto_rawDescOnce sync.Once
	file_client_proto_rawDescData []byte
)

func file_client_proto_rawDescGZIP() []byte {
	file_client_proto_rawDescOnce.Do(func() {
		file_client_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_client_proto_rawDesc), len(file_client_proto_rawDesc)))
	})
	return file_client_proto_rawDescData
}

var file_client_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_client_proto_goTypes = []any{
	(*PutRequest)(nil),          // 0: raft.PutRequest
	(*PutResponse)(nil),         // 1: raft.PutResponse
	(*GetRequest)(nil),          // 2: raft.GetRequest
	(*GetResponse)(nil),         // 3: raft.GetResponse
	(*ServerStateResponse)(nil), // 4: raft.ServerStateResponse
	(*ServerTermResponse)(nil),  // 5: raft.ServerTermResponse
	(*Peer)(nil),                // 6: raft.Peer
	(ServerState)(0),            // 7: raft.ServerState
	(*emptypb.Empty)(nil),       // 8: google.protobuf.Empty
}
var file_client_proto_depIdxs = []int32{
	6, // 0: raft.PutResponse.leader_hint:type_name -> raft.Peer
	6, // 1: raft.GetResponse.leader_hint:type_name -> raft.Peer
	7, // 2: raft.ServerStateResponse.state:type_name -> raft.ServerState
	0, // 3: raft.RaftClient.Put:input_type -> raft.PutRequest
	2, // 4: raft.RaftClient.Get:input_type -> raft.GetRequest
	2, // 5: raft.RaftClient.GetDebug:input_type -> raft.GetRequest
	8, // 6: raft.RaftClient.GetServerState:input_type -> google.protobuf.Empty
	8, // 7: raft.RaftClient.GetServerTerm:input_type -> google.protobuf.Empty
	1, // 8: raft.RaftClient.Put:output_type -> raft.PutResponse
	3, // 9: raft.RaftClient.Get:output_type -> raft.GetResponse
	3, // 10: raft.RaftClient.GetDebug:output_type -> raft.GetResponse
	4, // 11: raft.RaftClient.GetServerState:output_type -> raft.ServerStateResponse
	5, // 12: raft.RaftClient.GetServerTerm:output_type -> raft.ServerTermResponse
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_client_proto_init() }
func file_client_proto_init() {
	if File_client_proto != nil {
		return
	}
	file_types_proto_init()
	file_client_proto_msgTypes[0].OneofWrappers = []any{}
	file_client_proto_msgTypes[1].OneofWrappers = []any{}
	file_client_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_client_proto_rawDesc), len(file_client_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_client_proto_goTypes,
		DependencyIndexes: file_client_proto_depIdxs,
		MessageInfos:      file_client_proto_msgTypes,
	}.Build()
	File_client_proto = out.File
	file_client_proto_goTypes = nil
	file_client_proto_depIdxs = nil
}
